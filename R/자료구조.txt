자료구조

Vector
	자료형: 동일
	차원: 1
	생성:
		이상:이하
		c() - combine 함수
		c(요소1, 요소2)
		c(이상:이하)
		seq(시작, 종료, 증감)
		rep(이상:이하, 전체반복수, each=요소반복수)
			times=전체반복수
			each=요소반복수 (default=1)
			length.out=요소 개수 (default=NA)
	전체 호출: 벡터변수
	요소 호출: 벡터변수[index]
		- index가 1부터 시작
		- 음수가오면 제외 의미
		- 벡터 객체로 여러개 호출 가능
	적용 함수:
		합집합 - union()
		차집합 - setdiff()
		교집합 - intersect()

matrix
	자료형: 동일
	차원: 2
	생성:
		matric(c(), nrow=1, ncol=1, byrow=F열우선T행우선, dimnames = 열이름)
			- 열우선이 기본값
			- 행과 열의 수가 일치하지 않을경우 백터값을 최소로 반복해 추가 입력
		rbind(벡터, 벡터) - 행묶음
		cbind(백터, 백터) - 열묶음
	데이터 호출
		전체: 백터변수
		행: 백터변수[행,]
		열: 백터변수[,열]
	데이터 개수 보기
		전체: length()
		행: nrow()
		열: ncol()
	열 이름 지정: colnames(객체)<-벡터-열이름
	적용 함수:
		apply(객체, MARGIN=1행2열, Func적용함수)

array
	자료형: 동일
	차원: 3
	생성: array(데이터벡터, 차원벡터(행,열,면))
	조회:
		전체: array변수
		행: 변수[행,,]
		열: 변수[,열,]
		면: 변수[,,면]

List
	키-값 구조
	생성:
		- 키가 생략되면 [[1]],[[2]],... 로 생성
		list()
			list(키1="값1", 키2="값2", ...) - 원칙
			list(값1, 값2, ...) - 키 생략
			list(c()) - 벡터가 하나의 값으로 생성
		c(리스트, 리스트)
			리스트 생성
	리스트 -> 벡터구조 : unlist(변수)
	조회:
		전체: 변수
		값: 변수$키
		값의 요소: 변수$키[index]
	데이터 제거:
		변수<-NULL
	적용함수:
		lapply(리스트, 키별 적용 함수) - 리스트로 결과 반환
		sapply(리스트, 키별 적용 함수) - 벡터로 결과 반환
	다차원 리스트 가능
	다차원 리스트 열단위로 바인딩:
		do.call(cbind, 다차원리스트)
			키가 열이름으로 내용은 열값으로

data.frame
	컬럼 단위로 서로 다른 자료형 가능
	모든 컬럼은 크기가 동일해야 함
	생성:
		data.frame(열이름=열값, ...)
		data.frame(matrix()) - data.frame 생성
		read.table('파일경로', header=T헤더포함F불포함, sep=분리자)
		read.csv('파일경로', header=T헤더포함F불포함)
		read.csv('파일경로', header=F, col.name=열이름벡터)
	부분 생성:
		subset(데이터프레임변수, 조건)
	병합 생성:
		merge(데이터프레임, 데이터프레임, by.x="열이름1", by.y="열이름2")
	호출:
		전체: 변수
		열: 변수$열이름, 변수[열벡터]
	데이터 보기:
		ncol() - 열개수
		nrow() - 행개수
		str() - 자료구조 보기
		summary() - 요약 통계량 보기
		head() - 데이터프레임 행 6개만 보기(가장위)
		head(변수, 개수) - 데이터프레임 행개수만큼 보기
	적용 함수:
		apply(변수, 2, 적용함수) - 열 별로 적용
